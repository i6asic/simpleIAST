package com.keven1z.core.vulnerability.report;

import com.fasterxml.jackson.core.JsonProcessingException;

import com.keven1z.core.model.taint.TaintData;
import com.keven1z.core.model.finding.FindingData;
import com.keven1z.core.model.server.ReportData;
import com.keven1z.core.model.finding.TaintFindingData;
import com.keven1z.core.utils.JsonUtils;

import java.util.List;
import java.util.stream.Collectors;


/**
 * 构建漏洞报告json string
 */
public class ReportBuilder {
    private static final int KEEP_COUNT = 50; // 保留的元素数量

    public static String build(ReportData reportData) throws JsonProcessingException {
        reportData.setFindingDataList(optimize(reportData.getFindingDataList()));
        return JsonUtils.toJsonString(reportData);
    }

    /**
     * 若findingDataList的大小大于100，则进行裁剪，保留前后50
     */
    public static List<FindingData> optimize(List<FindingData> findingDataList) {

        return findingDataList.stream()
                .peek(findingData -> {
                    if (findingData instanceof TaintFindingData) {
                        TaintFindingData taintFindingData = (TaintFindingData) findingData;
                        List<TaintData> flowData = taintFindingData.getFlowData();

                        if (flowData.size() >= 100) {
                            List<TaintData> optimizedFlowData = flowData.stream()
                                    .limit(KEEP_COUNT)
                                    .collect(Collectors.toList());
                            optimizedFlowData.addAll(flowData.stream()
                                    .skip(flowData.size() - KEEP_COUNT)
                                    .collect(Collectors.toList()));
                            taintFindingData.setFlowData(optimizedFlowData);
                        }
                    }
                })
                .collect(Collectors.toList());
    }
}
