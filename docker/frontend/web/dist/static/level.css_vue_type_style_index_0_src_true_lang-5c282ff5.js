function h(s){let e=[];return s.forEach(a=>{const l=`${a.className.substring(a.className.lastIndexOf("/")+1)}.${a.method}()`,u=a.toValue||a.fromValue;let r=!1;const t=[{name:"className",label:"类名",value:a.className,show:!0},{name:"method",label:"方法名",value:a.method,show:!0},{name:"desc",label:"方法描述",value:a.desc,show:!0}];a.flowPaths&&a.flowPaths.length>0&&(t.push({name:"from",label:"污点来源",value:a.flowPaths[0].fromObject,show:!1},{name:"to",label:"污点去向",value:a.flowPaths[0].toObject,show:!1}),a.stage=="SINK"?t.push({name:"taint",label:"污点",value:a.flowPaths[0].fromObject,show:!0}):t.push({name:"taint",label:"污点",value:a.flowPaths[0].toObject,show:!0})),a.sanitizerNodes&&(t.push({name:"sanitizer",label:"过滤函数",value:a.sanitizerNodes,show:!0}),r=!0),t.push({name:"stack",label:"调用栈",value:a.stackList,show:!0}),e.push({label:o(a.stage),sign:l,children:t,taint:u,isSanitizer:r})}),e}function p(s){let e=[],a={className:s.className,parameterName:s.parameterName,parameterValue:s.parameterValue,sourceFile:s.sourceFile};return e.push(a),e}function N(s){let e=[],a={className:s.className,method:s.parameterName,desc:s.parameterValue,user:s.detail.user,url:s.detail.url,password:s.detail.password};return e.push(a),e}function o(s){return s=="SOURCE"?"污染源":s=="PROPAGATION"?"传播阶段":s=="SINK"?"漏洞触发阶段":s=="SANITIZER"?"过滤阶段":"未知"}const i="HARD_CODE",m="WEAK_PASSWORD_IN_SQL";export{i as H,m as W,N as a,h as b,p};
